<?xml version="1.0" encoding="utf-8"?>
<resources>
    <attr name="inputPicker" format="reference" />
    <attr name="VerticalSlider" format="reference" />
    <attr name="ContentExplorerPanelBrowser" format="reference" />
    <attr name="WizardsPanelBrowser" format="reference" />
    <attr name="OptionsPanelBrowser" format="reference" />
    <attr name="IndeterminateProgressBar" format="reference"></attr>

    <declare-styleable name="VerticalSlider">
        <!-- is this a balanaced slider (1/0) -->
        <attr name="isBalancedSlider" format="boolean" />
        <!-- display the values of the slider on the left or right -->
        <attr name="sliderValueDisplay">
            <enum name="displayOnLeft" value="0" />
            <enum name="displayOnRight" value="1" />
        </attr>

        <!-- Minimum value of the slider, it could either a negative zero or any positive number -->
        <attr name="sliderMinValue" format="integer" />

        <!-- Maximum value of the slider, it could greater than min value -->
        <attr name="sliderMaxValue" format="integer" />
        <attr name="sliderCurrentValue" format="integer" />
        <attr name="currentvalueDisplayTextStyle" format="reference" />
        <attr name="minmaxvalueDisplayTextStyle" format="reference" />
        <!-- resolution of update,i.e by what value shud the increase or decrease be -->
        <attr name="updateResolution" format="integer" />
        <attr name="sliderBarDrawable" format="reference" />
        <attr name="sliderBarFill" format="reference|color" />
        <attr name="sliderBarWidth" format="dimension" />
        <attr name="sliderBarHeight" format="dimension" />
        <attr name="upArrowIconDrawable" format="reference" />
        <attr name="downArrowIconDrawable" format="reference" />
        <attr name="upArrowIconPressedDrawable" format="reference" />
        <attr name="downArrowIconPressedDrawable" format="reference" />
        <attr name="bottomIconDrawable" format="reference" />
        <attr name="sliderLabelText" format="reference|string" />
        <attr name="sliderLabelTextStyle" format="reference" />
        <attr name="balancedSliderTopLabelText" format="reference|string" />
        <attr name="balancedSliderBottomLabelText" format="reference|string" />
        <attr name="sliderContainerDrawable" format="reference" />

        <attr name="sliderContainerWidth" format="dimension" />

        <attr name="sliderContainerHeight" format="dimension" />
        <attr name="isfMinColorDrawable" format="reference" />
        <attr name="isfMaxColorDrawable" format="reference" />
        <attr name="isfHeaderColorDrawable" format="reference" />
        <attr name="sliderTopLabelText" format="reference|string" />
        <attr name="sliderBottomLabelText" format="reference|string" />
        <attr name="sliderCenterLabelText" format="reference|string" />
        <attr name="isISFSlider" format="boolean" />

    </declare-styleable>

    <!--  <declare-styleable name="TabButton">
         Indicates the initial checked state of this TabButton.
         <attr name="checked" format="boolean" />
         Drawable used for the TabButton background graphic.
         <attr name="background" format="reference"/>
         Drawable used for the TabButton icon graphic.
         <attr name="iconDrawable" format="reference"/>
         Title of the TabButton.
         <attr name="titleText" format="string"/>
         The Margin between the TabButton background and the title.
         <attr name="titleTextMargin" format="dimension"/>
         Font size of the Title of the TabButton.
         <attr name="fontSize" format="dimension"/>
         Font color of the Title of the TabButton.
         <attr name="fontColor" format="color"/>
         External Font filename for the Title of the TabButton.
         <attr name="fontName" format="string"/>
         TabButton icon Animation when it gains focus.
         <attr name="iconOnFocusAnimation" format="reference" />
         TabButton icon Animation when it looses focus.
         <attr name="iconOnLooseFocusAnimation" format="reference" />
         TabButton background Animation when it gets clicked.
         <attr name="backgroundOnClickAlphaAnimation" format="reference" />
     </declare-styleable> -->
    <declare-styleable name="PanelBrowser">
        <attr name="nPbEnableAnimation" format="boolean" />
        <attr name="nPbFirstPanelWidth" format="dimension" />
        <attr name="nPbNoOfVisiblePanels" format="integer" />
    </declare-styleable>
    <declare-styleable name="IndeterminateProgressBar">
        <attr name="progressMaxValue" format="integer" />
        <attr name="curProgressValue" format="integer"></attr>
        <attr name="startSpinner" format="boolean" />
    </declare-styleable>

    <!-- filters -->

    <declare-styleable name="FilterRadio">
        <attr name="filtername" format="reference" />
        <attr name="ispicklist" format="reference" />
        <attr name="ellipseindex" format="reference" />
        <attr name="android:entries" />
    </declare-styleable>

    <!--  <declare-styleable name="TabButtonGroup">
         The id of the child TabButton that should be checked by default within this TabGroup.
         <attr name="checkedTabButton" format="integer" />
         Drawable used for the TabButton highlite fraphic.
         <attr name="focusHighlite" format="reference" />
         Drawable used for all the TabButton background graphic.
         <attr name="tabButtonBackground" format="reference"/>
         TabButton title Animation when it gets selected.
         <attr name="tabButtonOnCheckedTitleAnimation" format="reference" />
         TabButton title Animation when it gets deselected.
         <attr name="tabButtonOnUncheckedTitleAnimation" format="reference" />
         All TabButton icon Animation when it gains focus.
         <attr name="tabButtonIconOnFocusAnimation" format="reference" />
         All TabButton icon Animation when it looses focus.
         <attr name="tabButtonIconOnLooseFocusAnimation" format="reference" />
         All TabButton background Animation when it gets clicked.
         <attr name="tabButtonBackgroundOnClickAlphaAnimation" format="reference" />
         Animation when hidding the TabButton group.
         <attr name="hideAnimation" format="reference" />
         Animation when Showing the TabButton group.
         <attr name="showAnimation" format="reference" />
     </declare-styleable> -->
    <!-- filters -->

    <declare-styleable name="ColorKeys">
        <!-- Label for the red color key. -->
        <attr name="colorKeyRedText" format="string" />
        <!-- Label for the green color key. -->
        <attr name="colorKeyGreenText" format="string" />
        <!-- Label for the yellow color key. -->
        <attr name="colorKeyYellowText" format="string" />
        <!-- Label for the blue color key. -->
        <attr name="colorKeyBlueText" format="string" />
        <!-- Label for the info color key. -->
        <attr name="colorKeyInfoText" format="string" />
        <!-- Label for the Help color key. -->
        <attr name="colorKeyOptionsText" format="string" />
    </declare-styleable>

    <declare-styleable name="DefaultListView">
        <attr name="setRowWidth" format="integer" />
        <attr name="setRowHeight" format="integer" />
    </declare-styleable>

    <declare-styleable name="PowerMeter">
        <attr name="PowerMeterLabel" format="string" />
        <attr name="PowerMeterLabelStyle" format="reference" />
        <attr name="PowerMeterLevelIndicgatorRadius" format="dimension" />
        <attr name="PowerMeterLevelIndicatorLevels" format="integer" />
        <attr name="PowerMeterIcon" format="reference" />
        <attr name="PowerMeterRadius" format="dimension" />
        <attr name="PowerMeterLevelColorsArray" format="reference" />
        <attr name="PowerMeterTotalLevels" format="integer" />
        <attr name="PowerMeterCurrentLevel" format="integer" />
        <attr name="PowerMeterDefaultColor" format="color" />
        <attr name="PowerMeterWidth" format="dimension" />
        <attr name="PowerMeterHeight" format="dimension" />
        <attr name="PowerMeterTextBottmPadding" format="dimension" />
        <attr name="PowerMeterIconTopPadding" format="dimension" />
        <attr name="PowerMeterIconBottomPadding" format="dimension" />

    </declare-styleable>

    <declare-styleable name="verticalText">
        <attr name="verticalTextTopPadding_1" format="integer" />
    </declare-styleable>
    <declare-styleable name="inputPicker">
        <!-- The drawable for top -->
        <attr format="reference" name="inputPickerUpIndicator" />
        <attr format="reference" name="inputPickerUpIndicatorsel" />
        <attr format="reference" name="inputPickerUpIndicatorAct" />
        <attr format="reference" name="inputPickerDownIndicatorAct" />

        <!-- The drawable for bottom -->
        <attr format="reference" name="inputPickerDownIndicator" />
        <attr format="reference" name="inputPickerDownIndicatorsel" />
        <!-- The Label Name -->
        <attr format="string" name="inputPickerLabelName" />
        <!-- The max value for the picker -->
        <attr format="integer" name="inputPickerMaxValue" />
        <!-- The min value for the picker -->
        <attr format="integer" name="inputPickerMinValue" />
        <!-- The currentValue for the picker -->
        <attr format="integer" name="inputPickerCurrValue" />
        <!-- The drawable for background -->
        <attr format="reference" name="inputPickerbgDrawable" />
        <attr format="reference" name="inputPickerDisplayTextStyle" />
        <attr format="reference" name="inputPickerLabelTextStyle" />
        <attr name="overrideInputPicker" format="boolean" />
        <attr name="inputPickerUpArrowBgDrawable" format="reference" />
        <attr name="inputPickerDownArrowBgDrawable" format="reference" />
        <attr name="inputPickerDrawableWidth" format="dimension" />
        <attr format="boolean" name="enableLeadingZero" />
    </declare-styleable>

    <declare-styleable name="radioselector">
        <attr name="radioselectorDrawable" format="reference" />
    </declare-styleable>

    <declare-styleable name="checkboxselector">
        <attr name="checkboxselectorDrawable" format="reference" />
    </declare-styleable>
    <declare-styleable name="InputPinEntryTextField">
        <attr name="maxLength" format="integer" />
    </declare-styleable>
    <declare-styleable name="input_arrow">
        <attr name="state_pressed_down" format="boolean" />
        <attr name="state_pressed_up" format="boolean" />
    </declare-styleable>
    <declare-styleable name="slow_play_control">
        <attr name="invert_positions" format="boolean" />
    </declare-styleable>


    <!-- Start: TopNavigation styleable -->
    <declare-styleable name="TopNavigation">
        <attr name="itemIcon" format="reference" />
        <attr name="itemDescription" format="reference|string" />
        <attr name="itemId" format="reference|string" />
        <attr name="itemBackground" format="reference" />
    </declare-styleable>
    <!-- Start: TopNavigation styleable -->

    <!-- Start: FilterBar styleable -->
    <declare-styleable name="FilterBar">
        <attr name="filterId" format="integer" />
        <attr name="value" format="string" />
        <attr name="drawable" format="reference" />
        <attr name="checked" format="boolean" />
        <attr name="clearOthers" format="boolean" />
    </declare-styleable>
    <!-- Start: FilterBar styleable -->

    <!-- Start: Drawer styleable -->
    <declare-styleable name="drawer">
        <attr name="title" format="reference" />
        <attr name="titleVisibility" format="boolean" />
        <attr name="icon" format="reference" />
        <attr name="iconVisibility" format="boolean" />
        <attr name="refreshButtonVisibility" format="boolean" />
        <attr name="hasListFooterView" format="boolean" />
        <attr name="listFooterView" format="reference" />
        <attr name="metadataView" format="reference" />
        <attr name="metadataViewVisibility" format="boolean" />
        <attr name="secondaryView" format="reference" />
    </declare-styleable>
    <!-- Start: FilterBar styleable -->

    <!-- This state is used to distinguse the active/non-active channel drwables -->
    <declare-styleable name="Playback">
        <attr name="speed_control_14x" format="boolean" />
        <attr name="speed_control_12x" format="boolean" />
        <attr name="speed_control_2x" format="boolean" />
        <attr name="speed_control_4x" format="boolean" />
        <attr name="speed_control_8x" format="boolean" />
        <attr name="speed_control_16x" format="boolean" />
        <attr name="speed_control_32x" format="boolean" />
        <attr name="speed_control_fwd_normal" format="boolean" />
        <attr name="speed_control_rwd_normal" format="boolean" />
    </declare-styleable>
    <declare-styleable name="BrowseGrid">
        <attr name="selectedPosition" format="integer" />
        <attr name="displayMode">
            <enum name="normal" value="1" />
            <enum name="minimized" value="2" />
            <enum name="maximized" value="3" />
        </attr>
        <attr name="numColumns" format="integer" />
        <attr name="numRows" format="integer" />
        <attr name="gridType">
            <enum name="NowOnTvGrid" value="1" />
            <enum name="VoDGrid" value="2" />
            <enum name="ToDGrid" value="3" />
            <enum name="PhotoGrid" value="4" />
            <enum name="VideoGrid" value="5" />
            <enum name="NowOnTvGridSimple" value="6" />
            <enum name="FreeViewGrid" value="7" />
        </attr>
    </declare-styleable>


    <declare-styleable name="RefcountImageView">
        <attr name="autoUnrefOnDetach" format="boolean" />
    </declare-styleable>
    <declare-styleable name="ScrollAdapterView">

        <attr name="orientation">
            <enum name="horizontal" value="0" />
            <enum name="vertical" value="1" />
        </attr>

        <!-- indicate whether the ScrollAdapterView's child can have focus,
        default is true -->
        <attr name="itemFocusable" format="boolean" />

        <!--
          set to 1 (default value) for single row/column, set to > 1 for grid view,
          set to 0 for auto adjust rows/columns by widget size.
        -->
        <attr name="gridSetting" format="integer" />

        <!-- space between two items -->
        <attr name="space" format="dimension" />

        <!-- alternative space size of a selected item, ScrollAdapterView may assign
        more (or less) space to the selected item and animate the transition between
        multiple items.  In a more complicated case: if each item has a different
        selectedSize,  use ScrollAdapterCustomSize. <p>
        The value can be used in two cases: <p>
        - when selectedTakesMoreSpace is true:  ScrollAdapterView will allocate more
        spaces surrounding the focused item.  The extra spaces is added to left/right
        depending on "scrollItemAlign". <p>
        - when selectedTakesMoreSpace is false: ScrollAdapterView will not allocate
        more spaces for focused item,  but will align the focused item using the value. <p>
        In any case, ScrollAdapterView never scale the View or change its width or height,
        the view itself is responsible doing the scale in ScrollAdapterTransform or
        ScrollAdapterView.OnScrollListener
        -->
        <attr name="selectedSize" format="dimension" />

        <!-- if ScrollAdapterView will use "selectedSize" or ScrollAdapterCustomSize
        to add more spaces for selected item-->
        <attr name="selectedTakesMoreSpace" format="boolean" />

        <!-- describe how to put scroll center in the viewport -->
        <attr name="scrollCenterStrategy">

            <!-- keep scroll center in center of viewport, the middle point is 1/2 inside
            client area (size - padding) by default.  But you can also use scrollCenterOffset
            or scrollCenterOffsetPercent to customize it-->
            <enum name="keepCenter" value="0" />
            <!-- keep scroll center as a fixed distance from left/top -->
            <enum name="fixed" value="1" />
            <!-- keep scroll center offset from the center of the view -->
            <enum name="fixedPercent" value="2" />
            <!-- keep scroll center as a fixed distance from right/bottom -->
            <enum name="fixedToEnd" value="3" />
        </attr>

        <!-- only used when scrollCenterStrategy is fixed or fixedPercent -->
        <attr name="scrollCenterOffset" format="dimension" />

        <!-- only used when scrollCenterStrategy is fixedPercent -->
        <attr name="scrollCenterOffsetPercent" format="integer" />

        <!-- how to align the selected item -->
        <attr name="scrollItemAlign">
            <!-- align the center of selected item -->
            <enum name="center" value="0" />
            <!-- align the left/up edge of selected item -->
            <enum name="low" value="1" />
            <!-- align the right/down edge of selected item -->
            <enum name="high" value="2" />
        </attr>

        <!-- divisor (>=1) for view to chasing the scrolling target pos, set to 1.0 for
        immediately fill the gap of current pos and target, default value 2.0 fills half
        of the gap every time.  The reason that we use Lerper model is for smoothing out
        transitions between two different animations. -->
        <attr name="lerperDivisor" format="float" />

        <!--
          distance based transform for the views on the left/top of center position,
          the duration is interpreted as "dip" instead of milliseconds
        -->
        <attr name="lowItemTransform" format="reference" />

        <!--
          distance based transform for the views on the right/down of center position,
          the duration is interpreted as "dip" instead of milliseconds
        -->
        <attr name="highItemTransform" format="reference" />

        <!-- animation for showing expanded item -->
        <attr name="expandedItemInAnim" format="reference" />

        <!-- animation for hiding expanded item -->
        <attr name="expandedItemOutAnim" format="reference" />

        <!--  allow DPAD key to navigate out of scrollAdapterView, default is true -->
        <attr name="navigateOutAllowed" format="boolean" />

        <!--  allow DPAD key to navigate out of off axis of scrollAdapterView, default is true -->
        <attr name="navigateOutOfOffAxisAllowed" format="boolean" />

        <!--  allow DPAD key during animation, default is true -->
        <attr name="navigateInAnimationAllowed" format="boolean" />

    </declare-styleable>

    <!-- Declared for EPG guide-->
    <declare-styleable name="state_guide">
        <attr name="state_selected_guide" format="boolean" />
    </declare-styleable>

    <!-- ============= 2K16 Card View ============= -->
    <declare-styleable name="CardView">
        <attr name="card_width" format="dimension" />
        <attr name="card_height" format="dimension" />
        <attr name="primaryText" format="reference" />
        <attr name="secondaryText" format="reference" />
        <attr name="defaultBackground" format="reference" />
        <attr name="defaultLogo" format="reference" />
        <attr name="bottomBannerColor" format="color" />
        <attr name="bottomBannerHeight" format="dimension" />
        <attr name="fabIconMarginLeft" format="dimension" />
        <attr name="primaryTextMarginLeft" format="dimension" />
        <attr name="primaryTextMarginRight" format="dimension" />
        <attr name="primaryTextHighlightedMarginLeft" format="dimension" />
        <attr name="primaryTextHighlightedMarginTop" format="dimension" />
        <attr name="primaryTextHighlightedMarginRight" format="dimension" />
        <attr name="secondaryTextHighlightedMarginLeft" format="dimension" />
        <attr name="secondaryTextHighlightedMarginTop" format="dimension" />
        <attr name="secondaryTextHighlightedMarginRight" format="dimension" />
        <attr name="primaryTextMarginEnd" format="dimension" />
        <attr name="progressBarHeight" format="dimension" />
        <attr name="mediaIconWidth" format="dimension" />
        <attr name="mediaIconHeight" format="dimension" />
        <attr name="broadCastIconWidth" format="dimension" />
        <attr name="broadCastIconHeight" format="dimension" />
        <attr name="broadCastIconMarginLeft" format="dimension" />
        <attr name="broadCastIconMarginTop" format="dimension" />
        <attr name="moreIcon" format="reference" />
        <attr name="image_height" format="dimension" />
    </declare-styleable>
    <!-- ============= 2K16 Card View ============= -->

</resources>
